{"version":3,"file":"static/js/689.bda2a47f.chunk.js","mappings":"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","sources":["../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js","components/Psychologists/Psychologists.jsx","pages/PsychologistsPage.jsx"],"sourcesContent":["export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import React, { useState, useEffect } from 'react';\nimport { get, ref } from 'firebase/database';\nimport { db } from '../../firebase';\nimport PsychologistCard from './PsychologistCard/PsychologistCard';\nimport { nanoid } from 'nanoid';\nimport { LoadMoreButton } from './Psychologists.styled';\n\nconst Psychologists = ({ filterOption }) => {\n  const [doctor, setDoctor] = useState([]);\n  const [availableDoctors, setAvailableDoctors] = useState(3);\n  const [error, setError] = useState(null);\n\n  const loadMoreHandler = () => {\n    setAvailableDoctors(prevAvailableDoctors => prevAvailableDoctors + 3);\n  };\n\n  const filterOptions = (doctorsArray, option) => {\n    switch (option) {\n      case 'A to Z':\n        return doctorsArray.sort((a, b) => a.name.localeCompare(b.name));\n      case 'Z to A':\n        return doctorsArray.sort((a, b) => b.name.localeCompare(a.name));\n      case 'Less than 10$':\n        return doctorsArray.filter(person => person.price_per_hour < 10);\n      case 'Greater than 10$':\n        return doctorsArray.filter(person => person.price_per_hour > 10);\n      case 'Popular':\n        return doctorsArray.filter(person => person.rating > 4);\n      case 'Non popular':\n        return doctorsArray.filter(person => person.rating <= 4);\n      default:\n        return doctorsArray;\n    }\n  };\n\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      try {\n        const doctorsRef = ref(db, '/');\n        const doctorsSnapshot = await get(doctorsRef);\n\n        if (doctorsSnapshot.exists()) {\n          const doctorsData = doctorsSnapshot.val();\n          const doctorsArray = Object.entries(doctorsData).map(\n            ([id, data]) => ({\n              id: nanoid(),\n              ...data,\n            })\n          );\n\n          let filteredDoctors = filterOptions(doctorsArray, filterOption);\n          setDoctor(filteredDoctors.slice(0, availableDoctors));\n        }\n      } catch (error) {\n        console.error('Firebase error:', error);\n        setError(error.message);\n      }\n    };\n\n    fetchDoctors();\n  }, [filterOption, availableDoctors]);\n\n  return (\n    <section style={{ paddingBottom: 50 }}>\n      {error && <div>Error: {error}</div>}\n      <ul>\n        {doctor.map(doctor => (\n          <PsychologistCard key={doctor.id} doctor={doctor} />\n        ))}\n      </ul>\n      {doctor.length >= 3 && (\n        <LoadMoreButton onClick={loadMoreHandler}>Load more</LoadMoreButton>\n      )}\n    </section>\n  );\n};\n\nexport default Psychologists;\n","import React, { useState } from 'react';\nimport { FilterContainer } from 'components/Filter/Filter.styled';\nimport Filter from 'components/Filter/Filter';\nimport Psychologists from 'components/Psychologists/Psychologists';\n// import PsychologistCard from 'components/Psychologists/PsychologistCard/PsychologistCard';\n\nconst PsychologistsPage = () => {\n  const [filterOption, setFilterOption] = useState('Show all');\n\n  const changeFilterHandler = chosenOption => {\n    setFilterOption(chosenOption);\n  };\n\n  return (\n    <FilterContainer>\n      <Filter onFilterSelect={changeFilterHandler} />\n      <Psychologists filterOption={filterOption} />\n    </FilterContainer>\n  );\n};\n\nexport default PsychologistsPage;\n"],"names":["urlAlphabet","nanoid","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","_ref","filterOption","_useState","useState","_useState2","_slicedToArray","doctor","setDoctor","_useState3","_useState4","availableDoctors","setAvailableDoctors","_useState5","_useState6","error","setError","filterOptions","doctorsArray","option","sort","a","b","name","localeCompare","filter","person","price_per_hour","rating","useEffect","fetchDoctors","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","doctorsRef","doctorsSnapshot","doctorsData","filteredDoctors","_context","prev","next","ref","db","get","sent","exists","val","Object","entries","map","_ref3","_ref4","data","_objectSpread","slice","t0","console","message","stop","apply","_jsxs","style","paddingBottom","children","_jsx","PsychologistCard","LoadMoreButton","onClick","prevAvailableDoctors","setFilterOption","FilterContainer","Filter","onFilterSelect","chosenOption","Psychologists"],"sourceRoot":""}