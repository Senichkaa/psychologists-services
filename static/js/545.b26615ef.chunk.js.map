{"version":3,"file":"static/js/545.b26615ef.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/Filter/chooseOption.js","components/Filter/Filter.jsx","components/Psychologists/PsychologistCard/PsychologistCard.styled.jsx","components/Psychologists/PsychologistCard/PsychologistCard.jsx","components/Psychologists/Psychologists.styled.jsx","components/Psychologists/Psychologists.jsx","pages/PsychologistsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport variables from 'common/Variables';\n\nexport const FilterContainer = styled.div`\n  margin: 0 auto;\n  box-sizing: border-box;\n  max-width: 1440px;\n  padding: 0 128px;\n`;\n\nexport const FilterSection = styled.section`\n  position: relative;\n  display: inline-block;\n`;\n\nexport const FilterTitle = styled.h1`\n  margin-top: 64px;\n  margin-bottom: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: rgb(138, 138, 137);\n`;\n\nexport const SelectorButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 130px;\n  width: 225px;\n  height: 50px;\n  padding: 14px 0px 14px 18px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 14px;\n  background: ${variables.primaryMint};\n  color: ${variables.primaryWhite};\n  cursor: pointer;\n`;\n\nexport const SelectList = styled.ul`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  padding-right: 80px;\n  padding-left: 10px;\n  margin: 14px 10px 14px 0;\n  width: 225px;\n  list-style: none;\n  border-radius: 14px;\n  color: rgba(25, 26, 21, 0.3);\n  background-color: ${variables.primaryWhite};\n  box-shadow: 0px 20px 69px 0px rgba(0, 0, 0, 0.07);\n  overflow-y: auto;\n  z-index: 100;\n`;\n\nexport const Selection = styled.li`\n  margin-bottom: 8px;\n  margin-top: 14px;\n  color: rgba(25, 26, 21, 0.3);\n  cursor: pointer;\n`;\n","export const options = [\n  'A to Z',\n  'Z to A',\n  'Less than 10$',\n  'Greater than 10$',\n  'Popular',\n  'Not popular',\n  'Show all',\n];\n","import React, { useState } from 'react';\nimport { options } from './chooseOption';\nimport { FiChevronUp, FiChevronDown } from 'react-icons/fi';\nimport {\n  FilterSection,\n  FilterTitle,\n  SelectList,\n  Selection,\n  SelectorButton,\n} from './Filter.styled';\n\nconst Filter = () => {\n  const [isSelectOpen, setIsSelectOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(options[0]);\n\n  const optionSelectorHandler = choosedOption => {\n    setSelectedOption(choosedOption);\n    setIsSelectOpen(false);\n  };\n\n  return (\n    <FilterSection>\n      <FilterTitle>Filters</FilterTitle>\n      <SelectorButton\n        type=\"button\"\n        onClick={() => setIsSelectOpen(!isSelectOpen)}\n      >\n        {selectedOption}\n        {isSelectOpen ? <FiChevronUp /> : <FiChevronDown />}\n      </SelectorButton>\n      {isSelectOpen && (\n        <SelectList>\n          {options.map((option, index) => (\n            <Selection\n              key={index}\n              onClick={() => optionSelectorHandler(option)}\n            >\n              {option}\n            </Selection>\n          ))}\n        </SelectList>\n      )}\n    </FilterSection>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport variables from 'common/Variables';\n\nexport const DoctorCard = styled.li`\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  margin: 32px auto;\n  width: 1184px;\n  padding: 24px;\n  border-radius: 24px;\n  background: ${variables.cardBackground};\n`;\n\nexport const PhotoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-self: flex-start;\n  box-sizing: border-box;\n  width: 120px;\n  height: 120px;\n  padding: 2px;\n  margin-right: 24px;\n  border-radius: 30px;\n  border: 2px solid rgba(84, 190, 150, 0.2);\n`;\n\nexport const DoctorPhoto = styled.img`\n  width: 95px;\n  height: 95px;\n  border-radius: 15px;\n`;\n\nexport const RatingAndPriceInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const PsychologistTitle = styled.p`\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: ${variables.secondaryGray};\n`;\n\nexport const RatingInfo = styled.p`\n  margin-left: 4px;\n`;\n\nexport const PriceInfo = styled.p`\n  margin-right: 28px;\n`;\n\nexport const Price = styled.span`\n  color: #38cd3e;\n`;\n\nexport const Gap = styled.span`\n  margin: 0 16px 0 16px;\n  color: rgba(25, 26, 21, 0.2);\n`;\n\nexport const HeartButton = styled.button`\n  fill: white;\n  stroke: black;\n  background-color: transparent;\n`;\n\nexport const DoctorName = styled.h1`\n  font-size: 24px;\n  font-weight: 500;\n  margin-bottom: 24px;\n`;\n\nexport const AdditionalInfoWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 783px;\n`;\n\nexport const AdditionalPart = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  height: 40px;\n  padding: 8px 16px;\n  border-radius: 24px;\n  font-weight: 500;\n  background: rgb(243, 243, 243);\n  color: rgb(138, 138, 137);\n`;\n\nexport const PartValue = styled.span`\n  margin-left: 2px;\n  color: rgb(25, 26, 21);\n`;\n\nexport const AboutInfo = styled.p`\n  margin-top: 24px;\n  margin-bottom: 14px;\n  color: rgba(25, 26, 21, 0.5);\n`;\n\nexport const ReadMoreButton = styled.button`\n  font-weight: 500;\n  text-decoration-line: underline;\n  background-color: transparent;\n`;\n\nexport const DoctorNameWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const InfoWrapper = styled.div`\n  width: 990px;\n`;\n","import React from 'react';\nimport icons from '../../../assets/icons.svg';\nimport {\n  AboutInfo,\n  AdditionalInfoWrapper,\n  AdditionalPart,\n  DoctorCard,\n  DoctorName,\n  DoctorNameWrapper,\n  DoctorPhoto,\n  Gap,\n  HeartButton,\n  InfoWrapper,\n  PartValue,\n  PhotoWrapper,\n  Price,\n  PriceInfo,\n  PsychologistTitle,\n  RatingAndPriceInfo,\n  RatingInfo,\n  ReadMoreButton,\n} from './PsychologistCard.styled';\n\nconst PsychologistCard = ({ doctor }) => {\n  return (\n    <DoctorCard>\n      <PhotoWrapper>\n        <DoctorPhoto src={doctor.avatar_url} alt=\"doctor\" />\n      </PhotoWrapper>\n      <InfoWrapper>\n        <DoctorNameWrapper>\n          <PsychologistTitle>Psychologist</PsychologistTitle>\n          <RatingAndPriceInfo>\n            <svg width={17} height={13}>\n              <use href={`${icons}#icon-star`} />\n            </svg>\n            <RatingInfo>Rating: {doctor.rating}</RatingInfo>\n            <PriceInfo>\n              <Gap>|</Gap>\n              Price / hour: <Price>${doctor.price_per_hour}</Price>\n            </PriceInfo>\n            <HeartButton>\n              <svg width={26} height={26}>\n                <use href={`${icons}#icon-heart`} />\n              </svg>\n            </HeartButton>\n          </RatingAndPriceInfo>\n        </DoctorNameWrapper>\n        <DoctorName>{doctor.name}</DoctorName>\n        <AdditionalInfoWrapper>\n          <AdditionalPart>\n            Experience: <PartValue>{doctor.experience}</PartValue>\n          </AdditionalPart>\n          <AdditionalPart>\n            License: <PartValue>{doctor.license}</PartValue>\n          </AdditionalPart>\n          <AdditionalPart>\n            Specialization: <PartValue>{doctor.specialization}</PartValue>\n          </AdditionalPart>\n          <AdditionalPart>\n            Initial consultation:\n            <PartValue>{doctor.initial_consultation}</PartValue>\n          </AdditionalPart>\n        </AdditionalInfoWrapper>\n        <AboutInfo>{doctor.about}</AboutInfo>\n        <ReadMoreButton>Read More</ReadMoreButton>\n      </InfoWrapper>\n    </DoctorCard>\n  );\n};\n\nexport default PsychologistCard;\n","import variables from 'common/Variables';\nimport styled from 'styled-components';\n\nexport const LoadMoreButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 18px;\n  height: 52px;\n  margin: 0 auto;\n  padding: 14px 48px;\n  font-size: 16px;\n  font-weight: 500;\n  text-decoration: none;\n  border-radius: 30px;\n  border: 1px solid rgba(25, 26, 21, 0.2);\n  background-color: ${variables.primaryMint};\n  color: rgb(251, 251, 251);\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { get, ref } from 'firebase/database';\nimport { db } from '../../firebase';\nimport PsychologistCard from './PsychologistCard/PsychologistCard';\nimport { nanoid } from 'nanoid';\nimport { LoadMoreButton } from './Psychologists.styled';\n\nconst Psychologists = () => {\n  const [doctor, setDoctor] = useState([]);\n  const [availableDoctors, setAvailableDoctors] = useState(3);\n  const [error, setError] = useState(null);\n\n  const loadMoreHandler = () => {\n    setAvailableDoctors(prevAvailableDoctors => prevAvailableDoctors + 3);\n  };\n\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      try {\n        const doctorsRef = ref(db, '/');\n        const doctorsSnapshot = await get(doctorsRef);\n\n        if (doctorsSnapshot.exists()) {\n          const doctorsData = doctorsSnapshot.val();\n          const doctorsArray = Object.entries(doctorsData).map(\n            ([id, data]) => ({\n              id: nanoid(),\n              ...data,\n            })\n          );\n          setDoctor(doctorsArray.slice(0, availableDoctors));\n        }\n      } catch (error) {\n        console.error('Firebase error:', error);\n        setError(error.message);\n      }\n    };\n\n    fetchDoctors();\n  }, [availableDoctors]);\n\n  return (\n    <section style={{ paddingBottom: 50 }}>\n      {error && <div>Error: {error}</div>}\n      <ul>\n        {doctor.map(doctor => (\n          <PsychologistCard key={doctor.id} doctor={doctor} />\n        ))}\n      </ul>\n      {doctor.length >= 3 && (\n        <LoadMoreButton onClick={loadMoreHandler}>Load more</LoadMoreButton>\n      )}\n    </section>\n  );\n};\n\nexport default Psychologists;\n","import React from 'react';\nimport { FilterContainer } from 'components/Filter/Filter.styled';\nimport Filter from 'components/Filter/Filter';\nimport Psychologists from 'components/Psychologists/Psychologists';\n// import PsychologistCard from 'components/Psychologists/PsychologistCard/PsychologistCard';\n\nconst PsychologistsPage = () => {\n  return (\n    <FilterContainer>\n      <Filter />\n      <Psychologists />\n    </FilterContainer>\n  );\n};\n\nexport default PsychologistsPage;\n"],"names":["FilterContainer","styled","_templateObject","_taggedTemplateLiteral","FilterSection","_templateObject2","FilterTitle","_templateObject3","SelectorButton","_templateObject4","variables","SelectList","_templateObject5","Selection","_templateObject6","options","_useState","useState","_useState2","_slicedToArray","isSelectOpen","setIsSelectOpen","_useState3","_useState4","selectedOption","setSelectedOption","_jsxs","children","_jsx","type","onClick","FiChevronUp","FiChevronDown","map","option","index","DoctorCard","PhotoWrapper","DoctorPhoto","RatingAndPriceInfo","PsychologistTitle","RatingInfo","PriceInfo","_templateObject7","Price","_templateObject8","Gap","_templateObject9","HeartButton","_templateObject10","DoctorName","_templateObject11","AdditionalInfoWrapper","_templateObject12","AdditionalPart","_templateObject13","PartValue","_templateObject14","AboutInfo","_templateObject15","ReadMoreButton","_templateObject16","DoctorNameWrapper","_templateObject17","InfoWrapper","_templateObject18","_ref","doctor","src","avatar_url","alt","width","height","href","concat","icons","rating","price_per_hour","name","experience","license","specialization","initial_consultation","about","LoadMoreButton","setDoctor","availableDoctors","setAvailableDoctors","_useState5","_useState6","error","setError","useEffect","fetchDoctors","_asyncToGenerator","_regeneratorRuntime","_callee","doctorsRef","doctorsSnapshot","doctorsData","doctorsArray","_context","prev","next","ref","db","get","sent","exists","val","Object","entries","_ref2","_ref3","data","_objectSpread","id","nanoid","slice","t0","console","message","stop","apply","arguments","style","paddingBottom","PsychologistCard","length","prevAvailableDoctors","Filter","Psychologists"],"sourceRoot":""}